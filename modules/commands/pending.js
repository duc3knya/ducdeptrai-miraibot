module.exports.config = {
	name: "pending",
	version: "1.0.4",
	credits: "CatalizCS",
	hasPermssion: 2,
	description: "Qu·∫£n l√Ω tin nh·∫Øn ch·ªù c·ªßa bot",
	commandCategory: "system",
	cooldowns: 5
};

module.exports.handleReply = async function({ api, event, handleReply }) {
    const { body, threadID, messageID } = event;
    var count = 0;

    if (isNaN(body) && body.indexOf("c") == 0 || body.indexOf("cancel") == 0) {
        const index = (body.slice(1, body.length)).split(/\s+/);
        for (const singleIndex of index) {
            console.log(singleIndex);
            if (isNaN(singleIndex) || singleIndex <= 0 || singleIndex > handleReply.pending.length) return api.sendMessage(`${singleIndex} Kh√¥ng ph·∫£i l√† m·ªôt con s·ªë h·ª£p l·ªá`, threadID, messageID);
            api.removeUserFromGroup(api.getCurrentUserID(), handleReply.pending[singleIndex - 1].threadID);
            count+=1;
        }
        return api.sendMessage(`ƒê√£ t·ª´ ch·ªëi th√†nh c√¥ng ${count} nh√≥m!`, threadID, messageID);
    }
    else {
        const index = body.split(/\s+/);
        for (const singleIndex of index) {
            if (isNaN(singleIndex) || singleIndex <= 0 || singleIndex > handleReply.pending.length) return api.sendMessage(`${singleIndex} Kh√¥ng ph·∫£i l√† m·ªôt con s·ªë h·ª£p l·ªá`, threadID, messageID);
            api.sendMessage("ùêäùêûÃÇÃÅùê≠ ùêßùê®ÃÇÃÅùê¢ ùêõùê®ùê≠ ùê≠ùê°ùêöÃÄùêßùê° ùêúùê®ÃÇùêßùê† >ùüë ‚öí‚öôÔ∏è\n-------------------------\nùêèùê´ùêûùêüùê¢ùê± ùêúùêÆÃâùêö ùêõùê®ùê≠ ùê•ùêöÃÄ [ /help ]\n-------------------------\nùêïùêÆùê¢ ùê•ùê®ÃÄùêßùê† ùê§ùê°ùê®ÃÇùêßùê† ùê¨ùê©ùêöùê¶ ùêõùê®ùê≠ ‚öôÔ∏èüîß\n-------------------------\nùêÇùê°ùêÆÃÅùêú ùê¶ùê®Ã£ùê¢ ùêßùê†ùêÆÃõùê®ÃõÃÄùê¢ ùê¨ùêÆÃõÃâ ùêùùêÆÃ£ùêßùê† ùêõùê®ùê≠ ùêØùêØ\n-------------------------\nùêÄùêùùê¶ùê¢ùêß:‚òòÔ∏èL√™ NƒÉng Ho√†ng ƒê·ª©c‚òòÔ∏è\n-------------------------", handleReply.pending[singleIndex - 1].threadID);
            count+=1;
        }
        return api.sendMessage(`ƒê√£ ph√™ duy·ªát th√†nh c√¥ng ${count} nh√≥m!`, threadID, messageID);
    }
}

module.exports.run = async function({ api, event }) {
	const { threadID, messageID } = event;
    const commandName = this.config.name;
    var msg = "", index = 1;

    try {
		var spam = await api.getThreadList(100, null, ["OTHER"]) || [];
		var pending = await api.getThreadList(100, null, ["PENDING"]) || [];
	}
	catch (e) {
		return api.sendMessage("Kh√¥ng th·ªÉ l·∫•y danh s√°ch c√°c nh√≥m ƒëang ch·ªù!", threadID, messageID);
	}

	const list = [...spam, ...pending].filter(group => group.isSubscribed && group.isGroup);

    for (const single of list) msg += `${index++}/ ${single.name}(${single.threadID})\n`;

    if (list.length != 0) return api.sendMessage(`¬ª„ÄåPENDING„Äç¬´\n‚ùØ T·ªïng s·ªë nh√≥m c·∫ßn duy·ªát: ${list.length} nh√≥m ‚ùÆ\n‚••‚••‚•• Reply s·ªë th∆∞ t·ª± b√™n d∆∞·ªõi ƒë·ªÉ duy·ªát ‚••‚••‚••\n${msg}`, threadID, (error, info) => {
		global.client.handleReply.push({
            name: commandName,
            messageID: info.messageID,
            author: event.senderID,
            pending: list
        })
	}, messageID);
    else return api.sendMessage("¬ª„ÄåPENDING„Äç¬´\n‚ùØ Hi·ªán t·∫°i kh√¥ng c√≥ nh√≥m n√†o trong h√†ng ch·ªù ‚ùÆ", threadID, messageID);
	
}